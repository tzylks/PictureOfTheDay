{"version":3,"sources":["components/Card.js","components/Cards.js","components/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["PhotoCard","photoData","useState","iconColor","setIconColor","Card","sx","background","color","border","CardHeader","avatar","Avatar","bgcolor","title","action","IconButton","subheader","date","CardMedia","component","image","url","alt","minHeight","CardContent","Typography","variant","explanation","CardActions","onClick","Cards","nasaData","Grid","container","spacing","style","paddingLeft","marginTop","marginBottom","width","map","item","xs","md","lg","id","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","transition","transitions","create","SearchAppBar","search","setSearch","Box","flexGrow","AppBar","Toolbar","size","edge","mr","noWrap","sm","placeholder","inputProps","value","onChange","e","target","App","setNasaData","useEffect","fetch","then","r","json","data","searchFilter","filter","word","toLowerCase","includes","length","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65e15459.chunk.js","sourcesContent":["import Card from '@mui/material/Card'\nimport CardMedia from '@mui/material/CardMedia'\nimport CardHeader from '@mui/material/CardHeader'\nimport CardActions from '@mui/material/CardActions'\nimport Avatar from '@mui/material/Avatar'\nimport Typography from '@mui/material/Typography'\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton'\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { useState } from 'react'\n\nexport default function PhotoCard({ photoData }) {\n    \n    const [iconColor, setIconColor] = useState(false)\n\n    const hoverColor = () => setIconColor(!iconColor);\n\n    return (\n        <>\n            <Card sx={{ background: '#91C483', color: 'white', border: '3px solid black' }}>\n                <CardHeader\n                    avatar={\n                        <Avatar sx={{ bgcolor: 'black' }} aria-label=\"photo\">\n                            {photoData.title[0]}\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon />\n                        </IconButton>\n                    }\n                    title={photoData.title}\n                    subheader={photoData.date}\n                    sx={{ background: '#91C483', color: 'white' }}\n                />\n                <CardMedia\n                    component=\"img\"\n                    image={photoData.url}\n                    alt=\"photo\"\n                    sx={{ minHeight: 375 }}\n                />\n                <CardContent sx={{ background: '#91C483', color: 'white' }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        {photoData.explanation}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <IconButton>\n                        <FavoriteIcon onClick={hoverColor} sx={{ color: iconColor ? 'red' : 'gray' }} />\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </>\n    )\n}\n\n","import Card from './Card'\nimport Grid from '@mui/material/Grid'\n\nexport default function Cards({ nasaData }) {\n    return (\n        <>\n            <Grid container spacing={5} style={{ paddingLeft: \"30px\", marginTop: '1vh', marginBottom: '50px', width: \"100vw\" }}>\n                {nasaData.map(photoData => {\n                    return (<Grid item key={photoData.id} xs={12} md={6} lg={4}>\n                        <Card photoData={photoData} />\n                    </Grid>)\n                })}\n            </Grid>\n        </>\n    )\n}","import { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchAppBar({ search, setSearch }) {\n\n    const changeSearch = (e) => {\n        setSearch(e.target.value)\n    }\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\" sx={{ background: 'transparent' }}>\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n                    >\n                        Picture of the Day\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Search Title\"\n                            inputProps={{ 'aria-label': 'search' }}\n                            value={search}\n                            onChange={changeSearch}\n                        />\n                    </Search>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import { useState, useEffect } from \"react\";\nimport Cards from \"./components/Cards\"\nimport LinearProgress from '@mui/material/LinearProgress';\nimport AppBar from \"./components/AppBar\"\n\nfunction App() {\n  const [nasaData, setNasaData] = useState([]);\n  const [search, setSearch] = useState('')\n\n  const apiKey = 'niBLyJ66NAzw3zyqxbMb8fpgtCwLpwecETnq1g9H'\n\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?start_date=2022-01-11&end_date=2022-01-18&api_key=${apiKey}`)\n      .then((r) => r.json())\n      .then((data) => setNasaData(data));\n  }, []);\n\n  const searchFilter = nasaData.filter(word =>\n    word.title.toLowerCase().includes(search.toLowerCase())\n  )\n\n  return (\n    <>\n      <AppBar search={search} setSearch={setSearch} />\n        <Cards nasaData={searchFilter} /> \n      { nasaData.length < 1 ? <LinearProgress color=\"success\" sx={{ marginTop: '30%' }} /> : null }\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}